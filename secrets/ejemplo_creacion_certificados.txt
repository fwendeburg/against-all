Se crea el CA con (ya hecho):
openssl req -new -x509 -keyout against-all-ca.key \
	-out against-all-ca.crt -days 9999 \
	-subj "/CN=against-all-CA" \
	-passin pass:against-all-ca-password -passout pass:against-all-ca-password


Para cada cliente:
1. Crear keystore:
keytool -genkey -noprompt \
    -alias kafka-broker \
    -dname "CN=kafka-broker" \
    -keystore kafka.server.keystore.jks \
    -keyalg RSA \
    -storepass against-all-kafka-broker-password \
    -keypass against-all-kafka-broker-password

2. Crear peticiÃ³n de firma de certificado:
keytool -keystore kafka.server.keystore.jks -alias kafka-broker -certreq -file kafka-broker.csr -storepass against-all-kafka-broker-password -keypass against-all-kafka-broker-password

3. Se firma la Key:
openssl x509 -req -CA against-all-ca.crt -CAkey against-all-ca.key -in kafka-broker.csr -out kafka-broker-signed.crt -days 9999 -CAcreateserial -passin pass:against-all-ca-password

4. Importar el certificado de CA al KeyStore:
keytool -keystore kafka.server.keystore.jks -alias CARoot -import -file against-all-ca.crt -storepass against-all-kafka-broker-password -keypass against-all-kafka-broker-password

5. Importar el certificado firmado al KeyStore:
keytool -keystore kafka.server.keystore.jks -alias kafka-broker -import -file kafka-broker-signed.crt -storepass against-all-kafka-broker-password -keypass against-all-kafka-broker-password

6. Crear TrustStore e importar certificado de CA:
keytool -keystore all.truststore.jks -alias CARoot -import -file against-all-ca.crt -storepass against-all-truststore-password -keypass against-all-truststore-password

7. Escribir las contraseÃ±as en un archivo:
echo against-all-kafka-broker-password > kafka_broker_keystore_creds
echo against-all-truststore-password > truststore_creds